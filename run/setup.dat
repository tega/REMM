
#0 SECTION GENERAL
******************

0.01) Select the kind of estimation: 0=classic, 1=robust:
 1 



0.02) Select the kind of job: 1=only first step, 2=only second step, 3=both steps:
 3



0.03) Simulate the dataset or use real data: 0=real data, 1=simulate
 1



0.04) Number of observations:
1000


0.05) Estimate all simulations or only a subset of them:
      0=only a subset
      1=all simulations
 1

0.06) Number of monte carlo simulations and (if 0.05=1) their ID:
MC simulations (I7):    1
Simulation nb. (I7):    1


0.07) Ignore the first "n" simulations, n=?:
0


0.08) Do you want to store the selected output, t or .FALSE.
 t 
 t 
 t 


0.09) Do a grid search: 0=no
		1=only for the classic estimate 
		2=only for the robust
		3=both methods
 0



0.10) Repeat gread search for the first 'n' loops:
   n=0: do always
   n>0: do 'n' times
 2


***************************************************
#1 GENERATOR PROCESS OF THE DATA (ONLY IF 0.03 = 1)
***************************************************

1.01) Name of the DGP (A15)
ARMA_GARCH_MOD_

Select between: ARMA(p,q)_MODEL - STOC_VOLATILITY - ARMA_GARCH_MOD_
                SWITCH_AR_MODEL - MARKOV_SWI_M_AR
      


1.02) Number of iid series necessary for the simulation:
 1

Selection table:
ARMA(p,q)_MODEL     1
STOC_VOLATILITY     2
ARMA_GARCH_MOD_     1
SWITCH_AR_MODEL     2
MARKOV_SWI_M_AR     2

Selection table:
SWITCH_AR_MODEL     the regime innovation (the distribution is equal to all regimes)
                    + one series of uniform random variables

MARKOV_SWI_M_AR    same as SWITCH_AR_MODEL


1.03) Distribution of the innovations of every iid series (A7 or A7 I for STUDENT):
NORMAL_
UNIFORM

Selection table: ARMA(p,q)_MODEL   STOC_VOLATILITY   ARMA_GARCH_MOD_ SWITCH_AR_MODEL
UNIFORM ......         YES               YES              YES               YES
NORMAL_ ......         YES               YES              YES               YES
STUDENT df....         YES               YES              YES               YES
SNP_DST ......     WITHOUT LAGS      WITHOUT LAGS         YES           WITHOUT LAGS


Selection table:
SWITCH_AR_MODEL    the first is free but the second series MUST be UNIFORM 

MARKOV_SWI_M_AR    same as SWITCH_AR_MODEL


1.04) SNP_DST dimensions (only if the innov. distribution = SNP_DST)
 1             -> dimension of the polynomial, i.e. 1 if no lags in the polynomial part (I)
 2             -> order of dimension 1 (I)
 0             -> order of dimension 2 (I), and so on for every dimension ...



1.05) SNP_DST parameter's values (only if the innov. distribution = SNP_DST)
 0             -> epsilon_0 of the polynomial (R)
 1.            -> first polynomial coefficient
 2.            -> second polynomial coefficient, and so on ...
-0.333333333 


1.06) Number of parts of the DGP model (I):
 4

Selection table:
ARMA(p,q)_MODEL     2   (AR and MA part)
STOC_VOLATILITY     2   (AR-part for the mean, AR-part for the volatility)
ARMA_GARCH_MOD_     4   (AR-part and MA-part for the mean, ARCH-part and GARCH-part)
SWITCH_AR_MODEL     2   (Number of states, AR-part)
MARKOV_SWI_M_AR     2   (Number of states, AR-part)

1.07) Order of every part (I):
 1
 0
 1
 0

Selection table:
ARMA(p,q)_MODEL     AR-order (p) and  MA-order (q)

STOC_VOLATILITY     AR-order for the mean function
                    AR-order for the var. function

ARMA_GARCH_MOD_     AR-order for the mean function
                    MA-order for the mean function
                    ARCH-order
                    GARCH-order
SWITCH_AR_MODEL     Number of states
                    AR-order (p)

MARKOV_SWI_M_AR     Number of states
                    AR-order (p)
						  

1.08) Parameters values (R):
  0.01
  0.8
  0.02
  0.8 


The parameters must be written in vertical order. If you do not want the constant, then set its value = 0.
ARMA(p,q)_MODEL     AR-part: constant, lag(1) ... lag(p)
                    MA-part: variance, lag(1) ... lag(q)

STOC_VOLATILITY     MEAN...: constant, lag(1) ... lag(n1)
                    VAR....: constant, lag(1) ... lag(n2), sigma

ARMA_GARCH_MOD_     AR-part: constant, lag(1) ... lag(n1)
                    MA-part: lag(1) ... lag(n2)
                    ARCH...: constant, lag(1) ... lag(n3)
                    GARCH..: lag(1) ... lag(n4)
		    
SWITCH_AR_MODEL     vec(P).: P denotes the (N-1)xN TRANSITION MATRIX [P1|P2|...|PN] and Pi is
                             a column vector of transition probabilities from the i-th state
									  (N=number of states).
		              IMPORTANT REMARK: the last transition probability has been removed
                    because equal to 1-sum(Pi, i<>N)
                    AR-part: constant, lag(1) ... lag(p), sigma2

MARKOV_SWI_M_AR     vec(P).: P denotes the (N-1)xN TRANSITION MATRIX [P1|P2|...|PN] and Pi is
                    a column vector of transition probabilities from the i-th state 
						  (N=number of states).
						  IMPORTANT REMARK: the last transition probability has been removed
						  because equal to 1-sum(Pi, i<>N)
						  AR-part: constant(state=1), ..., constant(state=N), lag(1) ... lag(p), sigma2

1.09) The number of observations to discard in the simulation:
5000




*****************************************************
#2 CONTAMINATION MODEL OF THE DATA (ONLY IF 0.03 = 1)
*****************************************************

2.01) Contamination model: 0=no contamination, 1=contamination
 1            -> Additive outliers
 0            -> Innovation outliers (as many as number of IID series!)
 0

2.02) Epsilon contamination:
  0.01        -> Additive outliers
  0.01         -> Innovation outliers (as many as number of IID series!)
  0.01



2.03) Number of different contaminating points for the additive outliers:
 1      -> Additive outliers
 0      -> Innovation (as many as number of IID series!)
 0


2.04) Distribution of the contamination (A7, F5.1, F5.1, ..., F5.1):
_DIRAC_,   1.5, -6.0          -> Additive outliers
_DIRAC_,   6.0,  0.0          -> Innovation (as many as number of IID series!)
_DIRAC_,   6.5,  0.0 


Selection table of the innovations of every iid series:
   
_DIRAC_     
UNIFORM  lower_bound upper bound
NORMAL_  mean variance
STUDENT  df mean variance


***********************************************************
#3 SECTION FIRST STEP --> ESTIMATION OF THE AUXILIARY MODEL
***********************************************************

3.01) Run number (I):
 1






3.02) Number of lags in the conditional mean, >=0:
 1



3.03) Volatility estimation: first arch then garch orders:
 1
 0 



3.04) Dimension of the polynomial, pol_dim >=0:
 0



3.05) Maximal degree of every polynomial, pol_deg(i) >=0:
 1
 1


3.06) Score covariance matrix: 1=Outproduct, 2=Newey-West, 3=Gallant
 2



3.07) Number of lags for the Newey-West method, >=0:
 2 



3.08) Estimates covariance matrix: 1=Identity Hessian, 2=Estimate the Hessian
 1



3.09) Aux. Hessian matrix estimation: 1=Outproduct, 2=second derivatives
 2


3.10) Increment used to numerically approximate the Hessian of the aux. model
0.000001


3.11) Starting values for the cond. mean, first the constant then AR-parameters (I R):
exclude    restrict     value        LBound         UBound
   f          f         0.01         f >  0.        f <  0.
   f          f         0.8          f >  0.        t <  1.


3.12) Starting values for the cond. variance. First the constant, arch and garch param. (I R):
exclude    restrict     value        LBound         UBound
   f          f         0.02         t >  0.        f <  1.
   f          f         0.8          t >  0.        t <  1.



3.13) Starting values for the polynomial coefficient (I R):
exclude    restrict     value        LBound         UBound
   t          f         1.0          f >  0.        f <  0.
   f          f         0.0          f >  0.        f <  1.
   f          f         0.0          f >  0.        f <  0.
   f          f         0.0          f >  0.        f <  1.


3.14) Grid_search parameters (only for the non excluded parameters!):
T/F   LBound       UBound         #intervals
 f     0.3          0.7                9
 t     0.3          0.7                9
 t     0.1          0.2                9
 t    -0.20         0.20               9
 t     0.01         0.3                3
 t     0.01         0.3                3
 t    -1.           1.                 5
 t    -1.           1.                 5
 t    -1.           1.                 5


3.15) Lower bound parameter in the SNP density, epsilon_0:
 0.001



3.16) The number of linear constraints (nblc) on the auxiliary parameters:
 0



3.17) Input the parameter defining the linear constraints:
A (nblc x nb_free_par)           T/F    LowerBound    T/F      UpperBound 
0. 0. 0. 0. 0. 1. 1.              f      0.            t        0.99999



3.18) The number of non linear constraints on the auxiliary parameters:
 0 



3.19) Center and scale: 1 (0) means (not) to center the series. The same for scale.
 0
 0



3.20) Compute the gradient: 0=numerical approximation, 1=exact computation
 1





********************************************************
#4 SECTION STEP 2 --> ESTIMATION OF THE STRUCTURAL MODEL
********************************************************

4.01) Name of the structural model (CHARACTER 15):
ARMA_GARCH_MOD_

Select between: ARMA(p,q)_MODEL - STOC_VOLATILITY - ARMA_GARCH_MOD_
                SWITCH_AR_MODEL - MARKOV_SWI_M_AR



4.02) Number of parts of the structural model (I):
 4

Selection table:
ARMA(p,q)_MODEL     2   (AR-part and MA-part)
STOC_VOLATILITY     2   (AR-part for the mean, AR-part for the volatility)
ARMA_GARCH_MOD_     4   (AR-part and MA-part for the mean, ARCH-part and GARCH-part)
SWITCH_AR_MODEL     2   (Number of states, AR-part)
MARKOV_SWI_M_AR     2   (Number of states, AR-part)
		    

4.03) Order of every part (I):
 1
 0
 1
 0

Selection table:
ARMA(p,q)_MODEL     AR-order and MA-order

STOC_VOLATILITY     AR-order for the mean function
                    AR-order for the var. function

ARMA_GARCH_MOD_     AR-part: constant, lag(1) ... lag(n1)
                    MA-part: lag(1) ... lag(n2)
                    ARCH...: constant, lag(1) ... lag(n3)
                    GARCH..: lag(1) ... lag(n4)

SWITCH_AR_MODEL     Number of states
                    AR-order (p)

MARKOV_SWI_M_AR     Same as SWITCH_AR_MODEL


4.04) Starting values for the structural parameters:
exclude    restrict     value        LBound         UBound
   f          f          0.01        f >  0.        f <  1.
   f          f          0.8         t > -1.        t <  1.
   f          f          0.02        t >  0.        f <  1.
   f          f          0.8         t >  0.        t <  1.


The parameters must be written in vertical order. If you don't want the constant, then set its value = 0.
ARMA(p,q)_MODEL     AR-part: constant, lag(1) ... lag(p)
                    MA-part: variance, lag(1) ... lag(q)

STOC_VOLATILITY     MEAN...: constant, lag(1) ... lag(n1)
                    VAR....: constant, lag(1) ... lag(n2), sigma

ARMA_GARCH_MOD_     MEAN...: constant, lag(1) ... lag(n1)
                    ARCH...: constant, lag(1) ... lag(n2)
                    GARCH..: lag(1) ... lag(n3)

SWITCH_AR_MODEL     vec(P).: P denotes the (N-1)xN TRANSITION MATRIX [P1|P2|...|PN] and Pi is
                             a column vector of transition probabilities from the i-th state
									  (N=number of states).
                             IMPORTANT REMARK: the last transition probability has been removed
                             because equal to 1-sum(Pi, i<>N)
                    AR-part: constant, lag(1) ... lag(p), sigma2

MARKOV_SWI_M_AR     vec(P).: P denotes the (N-1)xN TRANSITION MATRIX [P1|P2|...|PN] and Pi is
   			                 a column vector of transition probabilities from the i-th state
            			        (N=number of states).
                    			  IMPORTANT REMARK: the last transition probability has been removed
                    			  because equal to 1-sum(Pi, i<>N)
                    AR-part: constant(state=1), ..., constant(state=N), lag(1) ... lag(p), sigma2


4.05) Grid_search parameters (only for the free parameters!):
T/F   LBound       UBound         #intervals
 f     0.0          0.1            1
 t     0.5          0.9            2
 t     0.0          0.2            2
 t     0.1          0.9            8


4.06) The number of linear constraints (nblc) on the structural parameters:
 0



4.07) Input the parameter defining the linear constraints:
A (nblc x nb_free_par)          T/F    LowerBound    T/F      UpperBound 
0. 0. 0. 0. 1. 1.                f       0.           t       1.


4.08) Number of iid series necessary for the simulation of the SM:
 1

ARMA(p,q)_MODEL     1
STOC_VOLATILITY     2
ARMA_GARCH_MOD_     1
SWITCH_AR_MODEL     1 + nb. states
MARKOV_SWI_M_AR     1 + nb. states

4.09) The length of the simulation used to approximate the expectation:
25000



4.10) The number of observations to discard in the simulation:
5000 



4.11) The maximal lenght of the simulation (MUST BE .GE. 4.09)
100000


4.12) Analyse the accuracy of the approx. of the expectation (t or f)?
      If true give the number of the MC repetitions on the same line.
f 10

4.13) aaaaaaaaa
      aaaaaaaaa 
f

4.14) Epsilon and method used to calculate the increment to numerically approximate M_rho
 0.0000001   <- epsilon
 1           <- method

Selection table for method:        
 1 : delta = epsilon
 2 : delta = MAX(epsilon,|rho(i)|*0.0001)
 
 
 
4.15) Method to compute numerically M_rho (ricorda di modificare anche la parte nella stima non robusta!)
 1

Selection table: 
 1 = centered
 2 = forward difference
 3 = backward difference



4.16) Estimate the inaccuracy error in the computation of M_rho(i,j)
 f


**********************************************************
#5 SECTION ROBUST ESTIMATION --> ONLY ACTIVE IF (0.01) = 1
**********************************************************

5.01) Set the bound c of the robustness degree:
 9.0 


5.02) Set the metric used to calculate the weights: 0=simple, 1=efficient
 0
 
5.03) Number of updates in the calculation of A: at start and during loop
 1
 1

5.04) Number of updates in the calculation of B (only if 5.02 = 1)
 1

5.05) Number of updates in the calculation of M_rho (only if 5.02 = 1; if -1 only one starting update)
 1
      
5.06) Frequency of updates in the calculation of A (only if 5.02 = 1)
 1                                                                          

5.07) Classic estimates as starting values: t=yes, f=no
 t   (auxiliary  parameters)
 f   (structural parameters)

5.08) Select the maximal nb. of loops in the robust estimation:
 50

5.09) Select the epsilon convergence criteria to stop the loops:
 0.0001

5.10) Select how the A matrix must be computed: 1=use observed data, 2=by simulation
 1


***********************************************************************
#6 SECTION NPSOL SETUP AND PRINT OPTIONS: USE -1 TO ACCEPT THE DEFAULTS
***********************************************************************
6.01) Use npsol as solver at: step_1, step_2, step_1_rob, step_2_rob
      0=npsol, 1=mia, 2=amoeba, 3=dfo
 t t t t


6.02) Set the bound used to define the infinity when bounding the parameters (R): default 10^20.
-1    



6.03) Set the max. acceptable absolute violation in the constraints (R): default e^0.5.
-1



6.04) Set the function precision, denoted eR, i.e. the measure of the accuracy
      in the objective function computation (R): default e^0.9.
step_1....:  -1
step_2....:  -1 
step_1_rob:  -1
step_2_rob:  -1 



6.05) Set the optimality tolerance accuracy in the approximation of the final
      solution of the problem (R), default eR^0.8.
step_1....:  -1
step_2....:  -1
step_1_rob:  -1
step_2_rob:  -1



6.06) Set the line search tolerance r, 0 <= r < 1, default = 0.9
                   smaller for more accurate search
step_1....:  0.9
step_2....:  0.9
step_1_rob:  0.9
step_2_rob:  0.9


6.07) Set the step limit, i.e. the maximum change in variables in the first step
                   of line search (default = 2.0)
step_1....:  1.0 
step_2....:  1.0 
step_1_rob:  0.01
step_2_rob:  0.2
						 
















6.08) Set the crash tolerance used in conjunction with the Cold start, default = 0.01 
0.000001



6.09) Set the maximal number of major iterations permitted before termination:
100



6.10) Set the maximal number of iterations for the optimization phase of each QP subproblem:
50



6.11) Set the Nolist option: 0=print the option listing, 1=suppress it.
                             Nolist and Print file = 0 suppresses all printing, including
                             error messages
0



6.12) Print File option:  0=suppresses any printing not associated with the optional parameters,
                         -1=default, or i=unit number to which the output must be sent.
-1



6.13) Set the major print level:  0=is the default, i.e. no output exept error messages
                                  1=the final solution
                                  5=one line of output for each iteration (but no final solution)
                                 10=the final solution and one line of output for each iteration
10



6.14) Set the minor print level:  0=is the default, i.e. no output exept error messages
                                  1=The final QP solution
                                  5=One line of output for each minor iter. (but no final QP solution)
                                 10=The final QP solution and one brief line of output for each min. iter.
0



6.15) Verify gradients options: 0=don't verify, 1=verify.
0
